<html>
<body>
    <style>
    .oculto {
        display: none;
    }
    .cdarkativo {
        background-color: dimgray;
    }
    .dark-mode .tab-content {
        background-color: var(--dark);
    }
    .dark-mode button.nav-link {
        color: white;
    }
    .dark-mode .custom-card {
        background-color: #8f8f8f;
    }
    .dark-mode .custom-card.card-off {
        box-shadow: 0px 0px 11px 7px #f31c1c8c !important;
    }
    .dark-mode {
        background-color: var(--dark);
        color: white;
    }
    .custom-card-img-top{
        border: 1px solid grey;
    
    }

        /*#e2e2e2*/
    .separadorname{
        font-size: x-large;
            color: black;
            text-decoration: none;
    }

    .separadornumber {
        font-size: xx-large;
            color: black;
            text-decoration: none;
    }

</style>     
<script>

        const AcertadorDeModo = () => {
            //Vai ver e o darck mode estava ou não ativo na ultima vez que se fechou a pagina e atualizar a página de acordo.
            if (localStorage.getItem("dark-mode") === "true") {
                document.querySelector("body").classList.add("dark-mode");
                document.getElementById("dark-mode-1").classList.remove("oculto")
                document.getElementById("light-mode-on").classList.add("oculto")

            } else {
                document.querySelector("body").classList.remove("dark-mode");
                document.getElementById("light-mode-on").classList.remove("oculto")
                document.getElementById("dark-mode-1").classList.add("oculto")

            }
        }
        const AlternadorDeModo = () => {
            //Altera o css da pagina alternando entre on/off e viceversa mudando tambêm os butoes que aparecem.
            if (document.querySelector(".dark-mode") === null) {
                document.querySelector("body").classList.add("dark-mode");
                localStorage.setItem('dark-mode', "true");
                document.getElementById("light-mode-on").classList.add("oculto")
                document.getElementById("dark-mode-1").classList.remove("oculto")
            } else {
                localStorage.setItem('dark-mode', "false");
                document.querySelector("body").classList.remove("dark-mode");
                document.getElementById("dark-mode-1").classList.add("oculto")
                document.getElementById("light-mode-on").classList.remove("oculto")
            }
        }

        const CriarCardTecnologia = (titulo, text, img, btnlink) => {
            //Criar uma card que representa uma tecnologia, esta card vai ser colocada dentro de um separador que corresponde ao tipo.
            let div = document.createElement("div");
            div.className = "custom-card shadow ";
            div.innerHTML =
                `
                    <img class="custom-card-img-top"
                        src="/Image/${img}"
                    alt="custom-card image" style="width:100%">
                    <div class="custom-card-body">
                    <h4 class="custom-card-title" >${titulo}</h4>
                    <p class="custom-card-text" >${text}</p>
                    <a href="${btnlink}" class="btn btn-sm btn-secondary rounded-5">ver mais</a>
                    </div>
                    `;
            return div;

        }

        const OcultarTodosSeparadores = () => {
            //É usado na mudança entre separadores para ocultar os restantes tipos e as aplicações que fazem parte dos mesmos.
            document.querySelectorAll(".divdeclass").forEach(ele => ele.children[0].classList.add("oculto"))
        }
        const DesocultarTodosSeparadores = () => {
            //É usado na mudança entre separadores para mostrar o tipo escolhido e as aplicações que fazem parte do mesmo.
            document.querySelectorAll(".divdeclass").forEach(ele => ele.children[0].classList.remove("oculto"))
        }
        const OcultarElemento = (element) => {
            //Serve para ocultar tanto o separador do tipo como as aplicações respetivas caso o tipo esteja disabled .
            //Para além disso serve para desselecionar todos os separaores e selecionar o separador mais recentemente escolhido.
            ResetarSeparadoresAtivos();
            element.classList.add("active");
            let idfunc = element.id
            if (idfunc == 'todos-tab') {
                DesocultarTodosSeparadores()
            } else {
                OcultarTodosSeparadores()
                document.querySelectorAll(".divdeclass").forEach(ele => {
                    let section_id = ele.children[0].id
                    if (section_id == idfunc.split('-')[0]) {
                        ele.children[0].classList.remove("oculto")
                    }
                })
            }
        }

        const CriarSeparadorTipo = (id, name, state) => {

            separadorplacer = document.getElementById("separadorplacer")
            pageplacer = document.getElementById("pageplacer")
            let li = document.createElement("li");
            li.className = "nav-item"
            li.role = "presentation"
            let disabled = state == true ? "" : "disabled"
            li.innerHTML =
                `<button class="nav-link " id="${id}-tab" data-bs-toggle="tab"
                                 data-bs-target="#${name}" type="button" role="tab" aria-controls="${name}"
                                             aria-selected="true" ${disabled} onclick="OcultarElemento(this)">
                            ${name}
                        </button>`

            separadorplacer.appendChild(li);

            let diva = document.createElement("div")
            let oculto = state == true ? "" : "oculto"

            diva.className = `divdeclass ${oculto}`

            diva.innerHTML = `
                    <div id="${id}" class="container tab-pane fade active show" role="tabpanel" aria-labelledby="#${name}-tab">
                        <br>
                                <c class="separadorname">${name}:</c>
                                <c class="separadornumber" id="${id}paracontagem"></c>

                            <div class="container-cards" id="cards${id}">
                        </div>
                    </div>`

            pageplacer.appendChild(diva)
        }

        const AlertaDaCardErro = (a) => {
            //Altera o css das cards de informação localizadas no topo da pagina fazendo-as ficar vermelhas,
            //É utilizado para salientar tipos e aplicações onde tenham existido dificuldades no acesso.
            document.getElementById(a).classList.add("card-off")
        }
        const AlertaDaCardNormalizar = (a) => {
            //Altera o css das cards de informação localizadas no topo da pagina retirando a coloração vermelha.
            document.getElementById(a).classList.remove("card-off")
        }
       
        //const PopularCardNumeroaa = (bons, todos, a, id,name) => {
        //    if (a) {
        //        nomedesp = name.replace(/\s/g, '');
        //        const element = document.getElementById(`${id}Mostrar`);
        //        if (element) {
        //            element.innerHTML = bons + "/" + todos;
        //        }
        //        if (bons != todos) {
        //            document.getElementById(`${id}${nomedesp}Card`).classList.add("card-off");
        //        } else {
        //            document.getElementById(`${id}${nomedesp}Card`).classList.remove("card-off");
        //        }
        //        document.getElementById(`${id}paracontagem`).innerHTML = todos;
        //    }
        //};

        const PopularCardNumero1 = (bons, todos,a) => {
        
            const element = document.getElementById("1Mostrar");
            if (element) {
                element.innerHTML = bons + "/" + todos;
            }
            if (bons != todos) {
                document.getElementById("1BasesdedadosMongoCard").classList.add("card-off");
            } else {
                document.getElementById("1BasesdedadosMongoCard").classList.remove("card-off");
            }
            document.getElementById("1paracontagem").innerHTML = todos;
        };

        const PopularCardNumero2 = (bons, todos) => {
            document.getElementById("2Mostrar").innerHTML = (bons + "/" + todos);
            if (bons != todos) {
                document.getElementById("2BasesdedadosSQLServerCard").classList.add("card-off")

            } else {
                document.getElementById("2BasesdedadosSQLServerCard").classList.remove("card-off")
            }
            document.getElementById("2paracontagem").innerHTML = todos
        }

        const PopularCardNumero3 = (bons, todos) => {
            document.getElementById("3Mostrar").innerHTML = (bons + "/" + todos);
            if (bons != todos) {
                document.getElementById("3ServidoresAplicacionaisCard").classList.add("card-off")

            } else {
                document.getElementById("3ServidoresAplicacionaisCard").classList.remove("card-off")
            }
            document.getElementById("3paracontagem").innerHTML = todos
        }
        const PopularCardNumero4 = (bons, todos) => {
            document.getElementById("4Mostrar").innerHTML = (bons + "/" + todos);
            if (bons != todos) {
                document.getElementById("4Aplicacoescard").classList.add("card-off")

            } else {
                document.getElementById("4Aplicacoescard").classList.remove("card-off")
            }

            document.getElementById("4paracontagem").innerHTML = todos
        }

        const ResetarSeparadoresAtivos = () => {
            var todososativos = document.querySelectorAll('.nav-link.active')
            todososativos.forEach(
                ele => {
                    ele.classList.remove("active")
                }
            )
        }


        const TestarLigacao = (idtec) => {
            fetch(`/EstadoTecnologias/Test/${idtec}`).then(
                response => response.json()
            ).then(
                data => {
                    data.forEach(
                        ele => {
                        })
                }
            ).catch(error => {
                console.log(error)
            });
        }

        const PainelDeControlo = async () => {
            var totaldeaplicacoestypeum = 0; //typeId:1 total de aplicacoes
            var respostaspositivastypeum = 0; //typeId:1 respostas positivas
            var totaldeaplicacoestypetres = 0; //typeId:3 total de aplicacoes
            var respostaspositivastypetres = 0; //typeId:3 respostas positivas
            var totaldeaplicacoestypequatro = 0; //typeId:4 total de aplicacoes
            var respostaspositivastypequatro = 0; //typeId:4 respostas positivas
            var sqlup = 0;
            var sqltot = 0;
            
            try {
                const response = await fetch("/api/EstadoTecnologiasAPI");
                const data = await response.json();

                data.forEach(ele => {


                    if (!ele.tecnologias.apagado) {
                        switch (ele.tecnologias.typeId) {
                            case 1:
                                if (ele.ok == true) {
                                    totaldeaplicacoestypeum++;
                                    respostaspositivastypeum++;
                                } else {
                                    totaldeaplicacoestypeum++;
                                }
                                break;
                            case 2:
                                if (ele.ok == true) {
                                    sqltot++;
                                    sqlup++;
                                } else {
                                    sqltot++;
                                }
                                break;
                            case 3:
                                if (ele.ok == true) {
                                    totaldeaplicacoestypetres++;
                                    respostaspositivastypetres++;
                                } else {
                                    totaldeaplicacoestypetres++;
                                }
                                break;
                            case 4:
                                if (ele.ok == true) {
                                    totaldeaplicacoestypequatro++;
                                    respostaspositivastypequatro++;
                                } else {
                                    totaldeaplicacoestypequatro++;
                                }
                                break;
                            default:
                                break;
                        }
                    }   
                    
                
                });

                PopularCardNumero1(respostaspositivastypeum, totaldeaplicacoestypeum);
                PopularCardNumero2(sqlup, sqltot);
                PopularCardNumero3(respostaspositivastypetres, totaldeaplicacoestypetres);
                PopularCardNumero4(respostaspositivastypequatro, totaldeaplicacoestypequatro);
                //PopularCardNumero1(respostaspositivastypeum, totaldeaplicacoestypeum, ele.tecnologias.tipo.ativo);
                //PopularCardNumero2(sqlup, sqltot, ele.tecnologias.tipo.ativo);
                //PopularCardNumero3(respostaspositivastypetres, totaldeaplicacoestypetres, ele.tecnologias.tipo.ativo);
                //PopularCardNumero4(respostaspositivastypequatro, totaldeaplicacoestypequatro, ele.tecnologias.tipo.ativo);
                           

            } catch (error) {
                console.log(error);
            }
        };

        function MetodoInicialParaFetch() {

            AcertadorDeModo();
            fetch("/api/TecnologiasAPI").then(
                response => response.json()
            ).then(
                data => {
                    data.forEach(
                        ele => {
                            if (!ele.apagado) {


                                let card = CriarCardTecnologia(ele.name, ele.descricao, ele.imageName, ele.link);
                                document.getElementById(`cards${ele.tipo.id}`).appendChild(card);
                                TestarLigacao(ele.id);

                            }

                        }
                    );
                }

            ).catch(error => {
                console.log(error);
            });

            fetch("/api/TiposAPI").then(
                response => response.json()
            ).then(
                data => {
                    separadorplacer = document.getElementById("separadorplacer");
                    separadorplacer.innerHTML = '';
                    pageplacer = document.getElementById("pageplacer");
                    pageplacer.innerHTML = '';
                    data.forEach(
                        ele => {
                            CriarSeparadorTipo(ele.id, ele.name, ele.ativo);
                            //if (ele.ativo == false) {
                            //    document.getElementById(`${ele.id}Mostrar`).innerHTML="**/**";
                            // }
                            }
                    );
                }
            ).catch(error => {
                console.log(error);
            });


            PainelDeControlo();
        }

        document.addEventListener("DOMContentLoaded", function () {
            console.log("dddd");
            MetodoInicialParaFetch();
            setInterval(PainelDeControlo, 15000);
            /* Assertartipos();*/
            document.getElementById("search").addEventListener("keyup", (e) => {
                e.preventDefault();
                let arrayCards = document.querySelectorAll(".custom-card");
                arrayCards.forEach(element => {
                    let cardtitle = element.querySelector(".custom-card-title");
                    let cardtext = element.querySelector(".custom-card-text");

                    if (!cardtitle.innerHTML.toLowerCase().includes(e.target.value.toLowerCase()) &&
                        !cardtext.innerHTML.toLowerCase().includes(e.target.value.toLowerCase())) {
                        element.classList.add("tohide")
                    } else {
                        element.classList.remove("tohide")
                    }
                });
            })
        });


    </script>
<div class"paginatoda" id="todaapagina">

<div>
    <div id="all-cards" class="row">
        <div class="col-lg-3 col-6">
                <div class="stats-box" id="1BasesdedadosMongoCard">
                    <h5 class="mb-3">Bases de dados Mongodb</h5>
                <div class="icon"> <i class="fa-solid fa-2x fa-chart-line"></i></div>
                <h6>App up/Tot</h6>
                        <div id="1div"><span class="badge rounded-pill bg-success" id="1Mostrar">**/**</span></div>
            </div>
        </div>
        <div class="col-lg-3 col-6">
                <div class="stats-box" id="2BasesdedadosSQLServerCard">
                    <h5 class="mb-3">Bases de dados SQL Server</h5>
                <div class="icon"> <i class="fa-solid fa-2x fa-chart-line"></i></div>
                        <h6>App up/Tot</h6>
                        <div id="2div"><span class="badge rounded-pill bg-success" id="2Mostrar">**/**</span></div>
            </div>
        </div>
        <div class="col-lg-3 col-6">
                <div class="stats-box" id="3ServidoresAplicacionaisCard">
                    <h5 class="mb-3">Servidores Aplicacionais</h5>
                <div class="icon"> <i class="fa-solid fa-2x fa-chart-line"></i></div>
                        <h6>App up/Tot</h6>
                        <div id="3div"><span class="badge rounded-pill bg-success" id="3Mostrar">**/**</span></div>
            </div>
        </div>
        <div class="col-lg-3 col-6">
                <div class="stats-box" id="4Aplicacoescard">
                    <h5 class="mb-3">Aplicações</h5>
                <div class="icon"> <i class="fa-solid fa-2x fa-chart-line"></i></div>
                        <h6>App up/Tot</h6>
                        <div><span class="badge rounded-pill bg-success" id="4Mostrar">**/**</span></div>
            </div>
        </div>
    </div>
</div>
<hr />
<ul class="nav nav-tabs" role="tablist">
    <li class="nav-item" role="presentation">
                <button class="nav-link active" id="todos-tab" data-bs-toggle="tab" data-bs-target="#todos" type="button" role="tab" aria-controls="todos" aria-selected="true" onclick="OcultarElemento(this)  ">Vista geral</button>@*ResetarSeparadoresAtivos()*@
      </li>
            <li class="nav-item" role="presentation">
                  <input class="form-control " id="search" type="text" placeholder="Search" aria-label="Search">
            </li>
            <li class="nav-item" role="presentation">
                
            <button class="btn  " type="submit" id="light-mode-on" onclick="AlternadorDeModo()">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-toggle-off" viewBox="0 0 16 16">
                    <path d="M11 4a4 4 0 0 1 0 8H8a4.992 4.992 0 0 0 2-4 4.992 4.992 0 0 0-2-4h3zm-6 8a4 4 0 1 1 0-8 4 4 0 0 1 0 8zM0 8a5 5 0 0 0 5 5h6a5 5 0 0 0 0-10H5a5 5 0 0 0-5 5z" />
                </svg>
            </button>
            <button class="btn cdarkativo " type="submit" id="dark-mode-1" onclick="AlternadorDeModo()">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-toggle-on" viewBox="0 0 16 16">
                    <path d="M5 3a5 5 0 0 0 0 10h6a5 5 0 0 0 0-10H5zm6 9a4 4 0 1 1 0-8 4 4 0 0 1 0 8z" />
                </svg>
            </button>
            </li>
</ul>
<ul class="nav nav-tabs" role="tablist" id="separadorplacer">
            
</ul>

<div class="tab-content" id="pageplacer">
    <div id="todos" class="container tab-pane fade show active">
        <br>
    </div>
</div>
</div>
    <script src="~/js/Monitorizacaojs.js"></script>
    </body>
</html>
